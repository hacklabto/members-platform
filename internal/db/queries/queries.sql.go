// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: queries.sql

package queries

import (
	"context"

	"github.com/lib/pq"
)

const getMembers = `-- name: GetMembers :many
select username, name, picture, picture_thumb, join_date, refer_to, contact_info, interests, badges, board, sudoer from members order by lower(username) asc
`

func (q *Queries) GetMembers(ctx context.Context) ([]Member, error) {
	rows, err := q.db.QueryContext(ctx, getMembers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Member
	for rows.Next() {
		var i Member
		if err := rows.Scan(
			&i.Username,
			&i.Name,
			&i.Picture,
			&i.PictureThumb,
			&i.JoinDate,
			&i.ReferTo,
			&i.ContactInfo,
			&i.Interests,
			pq.Array(&i.Badges),
			&i.Board,
			&i.Sudoer,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
